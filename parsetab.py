
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D14A95FA7125B8ED67FEF71D87D8D17D'
    
_lr_action_items = {'RPAREN':([2,11,12,13,15,16,17,18,],[-10,-8,18,-4,-7,-6,-5,-9,]),'PL_AND':([2,3,11,12,13,15,16,17,18,],[-10,6,-8,6,-4,-7,-6,-5,-9,]),'COMMA':([2,3,11,13,15,16,17,18,],[-10,7,-8,-4,-7,-6,-5,-9,]),'LPAREN':([0,4,5,6,7,8,9,10,],[5,5,5,5,5,5,5,5,]),'PL_BICOND':([2,3,11,12,13,15,16,17,18,],[-10,8,-8,8,8,-7,-6,8,-9,]),'PL_VAR':([0,4,5,6,7,8,9,10,],[2,2,2,2,2,2,2,2,]),'PL_NEG':([0,4,5,6,7,8,9,10,],[4,4,4,4,4,4,4,4,]),'PL_COND':([2,3,11,12,13,15,16,17,18,],[-10,9,-8,9,9,-7,-6,9,-9,]),'PL_OR':([2,3,11,12,13,15,16,17,18,],[-10,10,-8,10,-4,-7,-6,-5,-9,]),'$end':([0,1,2,3,7,11,13,14,15,16,17,18,],[-3,0,-10,-1,-3,-8,-4,-2,-7,-6,-5,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,4,5,6,7,8,9,10,],[3,11,12,13,3,15,16,17,]),'statement':([0,7,],[1,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> exp','statement',1,'p_statement_exp','pypl.py',158),
  ('statement -> exp COMMA statement','statement',3,'p_statement_list','pypl.py',162),
  ('statement -> <empty>','statement',0,'p_statement_empty','pypl.py',166),
  ('exp -> exp PL_AND exp','exp',3,'p_exp_and','pypl.py',170),
  ('exp -> exp PL_OR exp','exp',3,'p_exp_or','pypl.py',174),
  ('exp -> exp PL_COND exp','exp',3,'p_exp_cond','pypl.py',178),
  ('exp -> exp PL_BICOND exp','exp',3,'p_exp_bicond','pypl.py',182),
  ('exp -> PL_NEG exp','exp',2,'p_exp_neg','pypl.py',186),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_group','pypl.py',190),
  ('exp -> PL_VAR','exp',1,'p_exp_var','pypl.py',194),
]
